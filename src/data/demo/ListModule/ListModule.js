export const ListModule = {
  id: 805,
  title: "список",
  children: [
    {
      title: "список с заголовком и описанием",
      type: "text",
      description: `
            <p>Использование <code><strong>Set</strong></code> имеет несколько преимуществ:</p>
            <ul>
              <li>Уникальность значений: автоматически удаляет дубликаты.</li>
              <li>Быстрые операции: добавление, удаление и проверка наличия значений выполняется быстро.</li>
              <li>Поддержка любых типов данных, включая объекты.</li>
            </ul>
          `,
    },
    {
      title: "список с заголовком, описанием и ссылкой",
      type: "text",
      description: `
            <p>Использование <code><strong>Set</strong></code> имеет несколько преимуществ:</p>
            <ul>
              <li>Уникальность значений: автоматически удаляет дубликаты.</li>
              <li>Быстрые операции: добавление, удаление и проверка наличия значений выполняется быстро.</li>
              <li>Поддержка любых типов данных, включая объекты.</li>
            </ul>
          `,
      url: "https://",
      link: "ссылка",
    },
    {
      title: "список с заголовком, описанием и неправильной ссылкой",
      type: "text",
      description: `
            <p>Использование <code><strong>Set</strong></code> имеет несколько преимуществ:</p>
            <ul>
              <li>Уникальность значений: автоматически удаляет дубликаты.</li>
              <li>Быстрые операции: добавление, удаление и проверка наличия значений выполняется быстро.</li>
              <li>Поддержка любых типов данных, включая объекты.</li>
            </ul>
          `,
      url: "http://",
      link: "ссылка",
    },
    {
      title: "список с заголовком, описанием и пустой ссылкой",
      type: "text",
      description: `
            <p>Использование <code><strong>Set</strong></code> имеет несколько преимуществ:</p>
            <ul>
              <li>Уникальность значений: автоматически удаляет дубликаты.</li>
              <li>Быстрые операции: добавление, удаление и проверка наличия значений выполняется быстро.</li>
              <li>Поддержка любых типов данных, включая объекты.</li>
            </ul>
          `,
      url: "",
      link: "ссылка",
    },
    {
      title: "список с заголовком и описанием",
      type: "text",
      description: `
            <p>Использование <code><strong>Set</strong></code> имеет несколько преимуществ:</p>
            <ul>
              <li>Уникальность значений: автоматически удаляет дубликаты.</li>
              <li>Быстрые операции: добавление, удаление и проверка наличия значений выполняется быстро.</li>
              <li>Поддержка любых типов данных, включая объекты:</li>
                <ul>
                  <li>Уникальность значений: автоматически удаляет дубликаты.</li>
                  <li>Быстрые операции: добавление, удаление и проверка наличия значений выполняется быстро.</li>
                  <li>Поддержка любых типов данных, включая объекты.</li>
                </ul>
            </ul>
          `,
    },
    {
      title: "нумерованный список с заголовком и описанием",
      type: "text",
      description: `
            <p>Использование <code><strong>Set</strong></code> имеет несколько преимуществ:</p>
            <ol>
              <li>Уникальность значений: автоматически удаляет дубликаты.</li>
              <li>Быстрые операции: добавление, удаление и проверка наличия значений выполняется быстро.</li>
              <li>Поддержка любых типов данных, включая объекты:</li>
                <ul>
                  <li>Уникальность значений: автоматически удаляет дубликаты.</li>
                  <li>Быстрые операции: добавление, удаление и проверка наличия значений выполняется быстро.</li>
                  <li>Поддержка любых типов данных, включая объекты.</li>
                </ul>
            </ol>
          `,
    },
  ],
};
