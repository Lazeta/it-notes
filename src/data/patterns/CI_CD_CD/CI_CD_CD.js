export const CI_CD_CD = {
  id: 502,
  title: "Continuous Integration vs Continuous Deployment vs Delivery Pipeline",
  children: [
    {
      title: "Определение",
      type: "text",
      description: `
            <p>Continuous Integration (CI), Continuous Deployment (CD) и Delivery Pipeline — это практики разработки программного обеспечения, которые помогают обеспечить быструю и надежную поставку кода в рабочую среду.</p>
          `,
    },
    {
      title: "Continuous Integration (CI)",
      type: "text",
      description: `
            <p>CI — это практика, при которой разработчики регулярно интегрируют свои изменения в общий код. Каждый интегрированный код проходит автоматические тесты и сборку, что позволяет обнаруживать ошибки на ранних стадиях.</p>
            <ul>
              <li><strong>Цели CI:</strong> Устранение проблем, связанных с интеграцией, и обеспечение высокой качества кода.</li>
              <li><strong>Инструменты:</strong> Jenkins, Travis CI, CircleCI и др.</li>
            </ul>
          `,
    },
    {
      title: "Continuous Deployment (CD)",
      type: "text",
      description: `
            <p>CD — это практика, при которой изменения кода автоматически разворачиваются в рабочую среду после успешного прохождения всех тестов. Это позволяет командам быстрее реагировать на изменения и выпускать новые функции.</p>
            <ul>
              <li><strong>Цели CD:</strong> Упрощение процесса развертывания и минимизация времени между написанием кода и его доступностью для пользователей.</li>
              <li><strong>Инструменты:</strong> Docker, Kubernetes, Spinnaker и др.</li>
            </ul>
          `,
    },
    {
      title: "Delivery Pipeline",
      type: "text",
      description: `
            <p>Delivery Pipeline — это автоматизированный процесс, который включает в себя все этапы от написания кода до его развертывания в рабочую среду. Он включает CI и CD и обеспечивает полный контроль над процессом доставки программного обеспечения.</p>
            <ul>
              <li><strong>Этапы:</strong> Кодирование, тестирование, сборка, развертывание и мониторинг.</li>
              <li><strong>Преимущества:</strong> Позволяет командам ускорить процесс разработки и повысить качество выпускаемого ПО.</li>
            </ul>
          `,
    },
    {
      title: "Сравнение",
      type: "text",
      description: `
            <p>Сравнение CI, CD и Delivery Pipeline:</p>
            <ul>
              <li><strong>CI</strong>: Фокус на автоматизации интеграции и тестирования кода.</li>
              <li><strong>CD</strong>: Фокус на автоматизации развертывания кода в рабочую среду.</li>
              <li><strong>Delivery Pipeline</strong>: Полный процесс, охватывающий как CI, так и CD, с акцентом на управление всей цепочкой поставки.</li>
            </ul>
          `,
    },
  ],
};
