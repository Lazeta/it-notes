export const EventDelegation = {
  id: 184,
  title: "Делегирование событий",
  children: [
    {
      title: "1. Что такое делегирование событий?",
      type: "text",
      description: `
            <p>Делегирование событий - это паттерн, при котором обработчик события добавляется к родительскому элементу вместо каждого дочернего элемента.</p>
            <p>Это позволяет обрабатывать события, возникающие на дочерних элементах, более эффективно.</p>
          `,
    },
    {
      title: "2. Преимущества делегирования событий",
      type: "text",
      description: `
            <ul>
              <li><strong>Упрощение кода:</strong> Меньше обработчиков для управления.</li>
              <li><strong>Повышение производительности:</strong> Уменьшение количества обработчиков, особенно при динамическом добавлении элементов.</li>
              <li><strong>Легкость в управлении:</strong> Изменение структуры DOM не требует изменения обработчиков.</li>
            </ul>
          `,
    },
    {
      title: "3. Пример делегирования событий",
      type: "text",
      description: `
            <p>Пример делегирования событий на списке элементов:</p>
          `,
      code: `
    const list = document.getElementById('myList');
    
    list.addEventListener('click', function(event) {
      if (event.target.tagName === 'LI') {
        console.log('Элемент списка нажат:', event.target.textContent);
      }
    });
          `,
    },
    {
      title: "4. Когда использовать делегирование событий?",
      type: "text",
      description: `
            <p>Делегирование событий полезно, когда:</p>
            <ul>
              <li>Необходимо обрабатывать события на множестве дочерних элементов.</li>
              <li>Элементы могут динамически добавляться или удаляться из DOM.</li>
              <li>Хотите уменьшить количество обработчиков событий для повышения производительности.</li>
            </ul>
          `,
    },
  ],
};
