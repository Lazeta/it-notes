// import evaluateAnswers from "../../utils/evaluateAnswers";

export const testAgile = {
  id: 100000,
  title: "Тест по Agile",
  questions: [
    {
      id: 100001,
      question: "Что такое Agile?",
      answer: `
      **Agile:**
      - Это методология разработки, которая помогает быстро адаптироваться к изменениям.
      - Основана на принципах гибкости, сотрудничества и итеративности.
      - Цель — доставлять ценность клиенту быстрее и эффективнее.

      **Пример:**
      - Команда разрабатывает MVP (минимально жизнеспособный продукт) за несколько итераций, получая обратную связь от клиента после каждой.
      `,
    },
    {
      id: 100002,
      question: "Назовите основные принципы Agile.",
      answer: `
      **Основные принципы Agile:**
      1. **Гибкость:** Быстрая адаптация к изменениям.
      2. **Сотрудничество:** Тесное взаимодействие с заказчиком.
      3. **Итеративность:** Работа выполняется небольшими шагами (итерациями).
      4. **Постоянное улучшение:** Анализ процессов и их оптимизация.
      5. **Доставка ценности:** Фокус на предоставлении полезного результата.

      **Пример:**
      - В Scrum каждая итерация (спринт) длится 2–4 недели, и в конце команда демонстрирует готовый продукт.
      `,
    },
    {
      id: 100003,
      question: "Назовите методы Agile.",
      answer: `
      **Методы Agile:**
      1. **Scrum:** Итеративная разработка с фиксированными ролями и спринтами.
      2. **Kanban:** Управление задачами через визуализацию рабочего процесса.
      3. **Extreme Programming (XP):** Фокус на техническом совершенстве (например, TDD, парное программирование).
      4. **Lean:** Минимизация потерь и максимизация ценности.
      5. **Crystal:** Гибкая методология, зависящая от размера команды.
      6. **Dynamic System Development Method (DSDM):** Акцент на быстрое создание прототипов.

      **Пример:**
      - Scrum подходит для проектов с четкими требованиями, а Kanban — для поддержки текущих задач.
      `,
    },
    {
      id: 100004,
      question: "Какие преимущества есть у Agile?",
      answer: `
      **Преимущества Agile:**
      1. **Быстрая адаптация к изменениям:** Легко менять приоритеты.
      2. **Улучшенное взаимодействие с заказчиком:** Постоянная обратная связь.
      3. **Раннее выявление проблем:** Проблемы видны уже на этапе разработки.
      4. **Постоянное улучшение продукта:** Каждая итерация делает продукт лучше.
      5. **Высокая мотивация команды:** Команда участвует в принятии решений.

      **Пример:**
      - Заказчик может изменить требования в середине проекта, и команда быстро адаптируется.
      `,
    },
    {
      id: 100005,
      question: "Расскажите подробнее о Scrum, что это?",
      answer: `
      **Scrum:**
      - Это фреймворк Agile, который используется для управления проектами и разработки продуктов.
      - Основан на итерациях (спринтах), ролях и артефактах.

      **Ключевые элементы:**
      1. **Роли:**
         - **Product Owner:** Отвечает за бэклог продукта и приоритеты.
         - **Scrum Master:** Помогает команде следовать Scrum-процессам.
         - **Developers:** Реализуют задачи.
      2. **Артефакты:**
         - **Бэклог продукта:** Список всех требований.
         - **Бэклог спринта:** Задачи на текущий спринт.
         - **Инкремент:** Готовый результат спринта.
      3. **События:**
         - Планирование спринта.
         - Ежедневные стендапы.
         - Обзор спринта.
         - Ретроспектива.

      **Пример:**
      - Команда планирует спринт, работает над задачами и демонстрирует результат заказчику.
      `,
    },
    {
      id: 100006,
      question: "Какие есть этапы в Scrum?",
      answer: `
      **Этапы Scrum:**
      1. **Планирование спринта:**
         - Определение задач на спринт.
      2. **Ежедневные стендапы (Daily Scrum):**
         - Короткие встречи (15 минут) для обсуждения прогресса.
      3. **Разработка в течение спринта:**
         - Выполнение задач из бэклога спринта.
      4. **Обзор спринта (Sprint Review):**
         - Демонстрация результатов заказчику.
      5. **Ретроспектива спринта (Sprint Retrospective):**
         - Анализ процессов и поиск улучшений.

      **Пример:**
      - На ретроспективе команда обсуждает, как улучшить коммуникацию.
      `,
    },
    {
      id: 100007,
      question: "Какие преимущества Scrum?",
      answer: `
      **Преимущества Scrum:**
      1. **Прозрачность процесса:** Все задачи видны в бэклоге.
      2. **Быстрая обратная связь:** Заказчик видит результаты каждые 2–4 недели.
      3. **Гибкость:** Легко менять приоритеты.
      4. **Улучшенное взаимодействие:** Команда работает как единое целое.

      **Пример:**
      - Команда может пересмотреть планы после каждого спринта, если требования изменились.
      `,
    },
    {
      id: 100008,
      question: "Что такое Kanban?",
      answer: `
      **Kanban:**
      - Это метод управления задачами, который визуализирует рабочий процесс.
      - Используется доска с колонками (например, 'Сделать', 'В процессе', 'Готово').

      **Пример:**
      - Задачи перемещаются по доске, показывая их текущий статус.
      `,
    },
    {
      id: 100009,
      question: "Какие есть принципы Kanban?",
      answer: `
      **Принципы Kanban:**
      1. **Визуализация рабочего процесса:** Все задачи видны на доске.
      2. **Ограничение количества задач в работе (WIP):** Предотвращает перегрузку команды.
      3. **Управление потоком задач:** Задачи движутся плавно от начала до конца.
      4. **Постоянное улучшение:** Команда анализирует и оптимизирует процессы.

      **Пример:**
      - Если WIP лимит установлен на 3 задачи, новые задачи не берутся, пока текущие не завершены.
      `,
    },
    {
      id: 100010,
      question: "Подробнее о Kanban доске.",
      answer: `
      **Kanban доска:**
      - Инструмент визуализации рабочего процесса.
      - Состоит из колонок (например, 'Сделать', 'В процессе', 'Готово'), в которые перемещаются задачи (карточки).

      **Пример:**
      \`\`\`
      +----------------+----------------+----------------+
      |     Сделать    |  В процессе    |     Готово     |
      +----------------+----------------+----------------+
      | Задача 1       | Задача 2       | Задача 3       |
      +----------------+----------------+----------------+
      \`\`\`
      `,
    },
    {
      id: 100011,
      question: "Какие преимущества Kanban?",
      answer: `
      **Преимущества Kanban:**
      1. **Улучшенная визуализация:** Все задачи видны на доске.
      2. **Снижение нагрузки:** Ограничение WIP предотвращает перегрузку.
      3. **Гибкость:** Новые задачи могут добавляться в любое время.
      4. **Улучшенный поток задач:** Задачи движутся плавно.

      **Пример:**
      - Команда быстро реагирует на новые задачи, не нарушая процесс.
      `,
    },
    {
      id: 100012,
      question: "Какие ещё есть методологии помимо Agile?",
      answer: `
      **Другие методологии:**
      1. **Waterfall (каскадная модель):**
         - Линейный подход: этапы выполняются последовательно.
      2. **Spiral (спиральная модель):**
         - Акцент на управлении рисками.
      3. **V-Model (V-образная модель):**
         - Каждому этапу разработки соответствует этап тестирования.
      4. **DevOps:**
         - Интеграция разработки и операций.
      5. **Feature-Driven Development (FDD):**
         - Фокус на разработке функциональных возможностей.

      **Пример:**
      - Waterfall подходит для проектов с четкими требованиями, где изменения минимальны.
      `,
    },
    {
      id: 100013,
      question: "Какую роль играет Product Owner в Scrum?",
      answer: `
      **Product Owner:**
      - Отвечает за бэклог продукта и приоритеты.
      - Основные обязанности:
        1. **Управление бэклогом:** Формирует и приоритизирует задачи.
        2. **Взаимодействие с заказчиком:** Уточняет требования.
        3. **Представление интересов бизнеса:** Обеспечивает ценность продукта.

      **Пример:**
      - Product Owner решает, какие задачи войдут в следующий спринт.
      `,
    },
    {
      id: 100014,
      question: "Какую роль играет Scrum Master?",
      answer: `
      **Scrum Master:**
      - Помогает команде следовать Scrum-процессам.
      - Основные обязанности:
        1. **Обучение команды:** Объясняет принципы Scrum.
        2. **Устранение препятствий:** Помогает команде работать эффективно.
        3. **Фасилитация встреч:** Ведет планирование, стендапы и ретроспективы.

      **Пример:**
      - Scrum Master помогает команде разобраться с блокирующими задачами.
      `,
    },
    {
      id: 100015,
      question: "В чем разница между Agile и Waterfall?",
      answer: `
      **Разница между Agile и Waterfall:**
      1. **Подход:**
         - Agile: Итеративный, гибкий.
         - Waterfall: Линейный, последовательный.
      2. **Изменения:**
         - Agile: Легко адаптируется к изменениям.
         - Waterfall: Изменения сложны и дороги.
      3. **Обратная связь:**
         - Agile: Постоянная обратная связь.
         - Waterfall: Обратная связь только на этапе тестирования.

      **Пример:**
      - Agile подходит для стартапов, а Waterfall — для крупных проектов с четкими требованиями.
      `,
    },
    {
      id: 100016,
      question: "Какие метрики используются в Agile?",
      answer: `
      **Метрики в Agile:**
      1. **Velocity:** Скорость выполнения задач командой за спринт.
      2. **Burndown Chart:** Диаграмма, показывающая оставшийся объем работы.
      3. **Cycle Time:** Время, необходимое для завершения задачи.
      4. **Lead Time:** Время от создания задачи до её завершения.

      **Пример:**
      - Velocity помогает предсказать, сколько задач команда выполнит в следующем спринте.
      `,
    },
    {
      id: 100017,
      question: "Что такое Lean в Agile?",
      answer: `
      **Lean в Agile:**
      - Это подход, направленный на минимизацию потерь и максимизацию ценности.
      - Основные принципы:
        1. **Исключение потерь:** Устранение ненужных задач.
        2. **Построение качества:** Ошибки исправляются сразу.
        3. **Создание знаний:** Команда учится на опыте.
        4. **Отложенное решение:** Решения принимаются на основе фактов.

      **Пример:**
      - Команда фокусируется только на задачах, которые приносят ценность клиенту.
      `,
    },
  ],
};

// export const answers = {
//   1: "Agile — это методология разработки, которая помогает быстро адаптироваться к изменениям.",
//   2: "Agile основывается на принципах гибкости, сотрудничества и итеративности.",
//   3: "Scrum, Kanban, Extreme Programming (XP), Lean, Crystal, Dynamic System Development Method (DSDM).",
//   4: "Быстрая адаптация к изменениям. Улучшенное взаимодействие с заказчиком. Раннее выявление проблем. Постоянное улучшение продукта.",
//   5: "Scrum — это фреймворк Agile, который используется для управления проектами и разработки продуктов. Он основан на итерациях (спринтах), ролях (Scrum Master, Product Owner, Developers) и артефактах (бэклог продукта, бэклог спринта, инкремент).",
//   6: "Планирование спринта. Ежедневные стендапы (Daily Scrum). Разработка в течение спринта. Обзор спринта (Sprint Review). Ретроспектива спринта (Sprint Retrospective).",
//   7: "Прозрачность процесса разработки. Быстрая обратная связь от заказчика. Гибкость в управлении изменениями. Улучшенное взаимодействие в команде.",
//   8: "Kanban — это метод управления задачами, который визуализирует рабочий процесс на доске с колонками (например, 'Сделать', 'В процессе', 'Готово').",
//   9: "Визуализация рабочего процесса. Ограничение количества задач в работе (WIP). Управление потоком задач. Постоянное улучшение процесса (Kaizen). Он помогает ограничивать количество задач в работе (WIP) и улучшает поток задач.",
//   10: "Kanban доска — это инструмент визуализации рабочего процесса. Она состоит из колонок (например, 'Сделать', 'В процессе', 'Готово'), в которые перемещаются задачи. (карточки). Это помогает команде видеть статус задач и улучшать процесс.",
//   11: "Улучшенная визуализация рабочего процесса. Снижение количества задач в работе (WIP). Улучшенный поток задач. Гибкость и адаптивность.",
//   12: "Waterfall (каскадная модель). Spiral (спиральная модель). V-Model (V-образная модель). DevOps. Feature-Driven Development (FDD).",
// };

// evaluateAnswers(test, answers).then((results) => {
//   console.log(results);
// });
