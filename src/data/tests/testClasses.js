export const testClasses = {
  id: 100096,
  title: "Classes",
  questions: [
    {
      id: 100097,
      question: "Как создать класс в JavaScript и какие ключевые слова используются для этого?",
      answer: `
Ключевые слова и особенности
class – объявление класса.
constructor() – специальный метод для инициализации объекта.
this – ссылка на текущий экземпляр класса.
new – создание объекта из класса.
extends – наследование (если нужно).
static – статические методы/поля (принадлежат классу, а не объекту).
      `,
    },
    {
      id: 100098,
      question: "Как реализовать наследование в JavaScript, используя классы, и как работает конструктор в дочернем классе?",
      answer: `
Наследование реализуется через ключевые слова extends и super().
extends – указывает, от какого класса наследоваться.
super() – вызывает конструктор родителя (обязателен в constructor дочернего класса).
super.method() – обращение к методу родителя.
Переопределение методов – просто объявить метод с тем же именем.
      `,
    },
    {
      id: 100099,
      question: "Что такое полиморфизм в контексте классов в JavaScript и как его можно достичь?",
      answer: `
Полиморфизм — это возможность объектов разных классов использовать методы с одинаковым именем, но разной реализацией. В JavaScript он достигается через:
Через наследование и переопределение методов (extends + перезапись метода).
Через утиную типизацию (проверка наличия метода у объекта).
В TypeScript — через интерфейсы (implements) и абстрактные классы.
      `,
    }
  ],
};