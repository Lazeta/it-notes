export const testCookies = {
  id: 101575,
  title: "Cookie",
  questions: [
    {
      id: 101576,
      question:
        "Что такое cookie и для чего они используются в веб-разработке?",
      answer: `
Cookie (куки) — это небольшие текстовые файлы, которые веб-сайты сохраняют в браузере пользователя. 
Они содержат пары ключ-значение и используются для хранения информации между сеансами.

Аутентификация:
Сохранение токенов (например, session_id), чтобы пользователь оставался авторизованным.
Персонализация:
Запоминание предпочтений (язык, тема, регион).
Отслеживание:
Аналитика поведения пользователей (Google Analytics, рекламные системы).
Корзины покупок:
Временное хранение данных о выбранных товарах.
Управление сессиями:
Связь между запросами (например, в банковских приложениях).
      `,
    },
    {
      id: 101577,
      question:
        "Какие атрибуты могут быть у cookies и как они влияют на поведение cookies?",
      answer: `
Expires – указывает точную дату истечения срока действия cookie в формате GMT.
Max-Age – задаёт время жизни в секундах (приоритетнее, чем Expires).
Domain (Домен) - Определяет, для каких доменов cookie действительны.
Path (Путь) - Ограничивает область действия cookie определённым путём на сервере.
Secure (Только HTTPS) - Cookie будет отправляться только по защищённому соединению (HTTPS).
HttpOnly (Защита от XSS) - Запрещает доступ к cookie через JavaScript (document.cookie).
SameSite (Защита от CSRF) - Контролирует отправку cookie при кросс-доменных запросах.
Partitioned (Изолированные cookie) - Новый атрибут для разделения cookie в Privacy Sandbox (Chrome).
http 
      `,
    },
    {
      id: 101578,
      question:
        "Какие меры предосторожности необходимо соблюдать при работе с cookies с точки зрения безопасности?",
      answer: `
Используйте флаг HttpOnly:
Устанавливайте флаг HttpOnly, чтобы предотвратить доступ к cookie через JavaScript и уменьшить 
риск XSS-атак.
Используйте флаг Secure:
Устанавливайте флаг Secure, чтобы cookie передавались только по HTTPS, защищая их от перехвата.
Соблюдайте SameSite:
Используйте атрибут SameSite для ограничения отправки cookie вместе с кросс-доменные запросами 
(например, SameSite=Lax или SameSite=Strict).
Минимизируйте данные:
Храните в cookie только необходимые данные и избегайте хранения чувствительной информации.
Регулярно обновляйте:
Устанавливайте срок действия cookie и регулярно обновляйте их для предотвращения злоупотреблений.
Проверяйте содержимое:
Используйте подписи или шифрование для защиты содержимого cookie от подделки.
Защита от CSRF:
Реализуйте меры защиты от CSRF-атак, например, используя токены.
      `,
    },
    {
      id: 101579,
      question: "Что такое куки?",
      answer: `Куки - это фрагменты данных, которые веб-сайты сохраняют в браузере пользователя 
      для хранения информации о нём.`,
    },
    {
      id: 101580,
      question: "Для чего используются куки?",
      answer: `Куки позволяют сайтам запоминать информацию о пользователе, чтобы сделать его 
      пребывание на сайте более удобным и персонализированным. Например, они могут использоваться 
      для автоматического входа в систему, запоминания настроек и предпочтений, а также для 
      отслеживания активности пользователя на сайте.`,
    },
    {
      id: 101581,
      question: "Как создать куки в JavaScript?",
      answer: `Куки создаются с помощью присвоения значения свойству document.cookie. Например: 
      document.cookie = "имя_куки=значение_куки";
      Можно также указать дополнительные параметры, такие как срок действия, путь и домен:
      document.cookie = "имя_куки=значение_куки; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/";`,
    },
    {
      id: 101582,
      question: "Как получить значение куки в JavaScript?",
      answer: `Значение куки можно получить, обратившись к свойству document.cookie. Это свойство 
      возвращает строку, содержащую все куки, разделенные точкой с запятой. Для получения значения 
      конкретной куки необходимо извлечь ее из этой строки, используя, например, методы split() и 
      substring()`,
    },
    {
      id: 101583,
      question: "Как удалить куки в JavaScript?",
      answer: `Для удаления куки необходимо установить для нее срок действия в прошлом. Например:
      document.cookie = "имя_куки=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/";`,
    },
    {
      id: 101584,
      question: "Какие бывают типы куки?",
      answer: `Существуют сессионные куки (действуют только пока открыт браузер) и постоянные 
      куки (хранятся на компьютере пользователя определенное время). `,
    },
    {
      id: 101585,
      question: "Какие ограничения на размер и количество куки?",
      answer: `Существуют ограничения на размер одного куки (обычно 4кб) и на общее 
      количество куки, которые может сохранить браузер. `,
    },
    {
      id: 101586,
      question: "В чем разница между куки и локальным хранилищем (localStorage)?",
      answer: `Куки передаются на сервер при каждом запросе, в то время как данные из 
      localStorage хранятся только на клиенте. localStorage обычно имеет больший объем и лучше 
      подходит для хранения больших объемов данных. `,
    },
    {
      id: 101587,
      question: "Как обеспечить безопасность куки?",
      answer: `Важно использовать безопасные (HTTPS) соединения при работе с куки, а также 
      избегать хранения конфиденциальной информации в куки. Рекомендуется использовать атрибут 
      Secure для куки, чтобы они передавались только по HTTPS. `,
    },
    {
      id: 101588,
      question: "Как работать с куки, если они не отображаются в document.cookie?",
      answer: `Иногда куки не видны в document.cookie из-за настроек безопасности браузера 
      или из-за того, что они установлены для другого домена (сторонние куки). `,
    },
  ],
};
