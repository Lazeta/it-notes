export const testCookies = {
  id: 100121,
  title: "Cookie",
  questions: [
    {
      id: 100106,
      question: "Что такое cookie и для чего они используются в веб-разработке?",
      answer: `
Cookie (куки) — это небольшие текстовые файлы, которые веб-сайты сохраняют в браузере пользователя. Они содержат пары ключ-значение и используются для хранения информации между сеансами.

Аутентификация:
Сохранение токенов (например, session_id), чтобы пользователь оставался авторизованным.
Персонализация:
Запоминание предпочтений (язык, тема, регион).
Отслеживание:
Аналитика поведения пользователей (Google Analytics, рекламные системы).
Корзины покупок:
Временное хранение данных о выбранных товарах.
Управление сессиями:
Связь между запросами (например, в банковских приложениях).
      `,
    },
    {
      id: 100107,
      question: "Какие атрибуты могут быть у cookies и как они влияют на поведение cookies?",
      answer: `
Expires – указывает точную дату истечения срока действия cookie в формате GMT.
Max-Age – задаёт время жизни в секундах (приоритетнее, чем Expires).
Domain (Домен) - Определяет, для каких доменов cookie действительны.
Path (Путь) - Ограничивает область действия cookie определённым путём на сервере.
Secure (Только HTTPS) - Cookie будет отправляться только по защищённому соединению (HTTPS).
HttpOnly (Защита от XSS) - Запрещает доступ к cookie через JavaScript (document.cookie).
SameSite (Защита от CSRF) - Контролирует отправку cookie при кросс-доменных запросах.
Partitioned (Изолированные cookie) - Новый атрибут для разделения cookie в Privacy Sandbox (Chrome).
http 
      `,
    },
    {
      id: 100108,
      question: "Какие меры предосторожности необходимо соблюдать при работе с cookies с точки зрения безопасности?",
      answer: `
Используйте флаг HttpOnly:
Устанавливайте флаг HttpOnly, чтобы предотвратить доступ к cookie через JavaScript и уменьшить риск XSS-атак.
Используйте флаг Secure:
Устанавливайте флаг Secure, чтобы cookie передавались только по HTTPS, защищая их от перехвата.
Соблюдайте SameSite:
Используйте атрибут SameSite для ограничения отправки cookie вместе с кросс-доменные запросами (например, SameSite=Lax или SameSite=Strict).
Минимизируйте данные:
Храните в cookie только необходимые данные и избегайте хранения чувствительной информации.
Регулярно обновляйте:
Устанавливайте срок действия cookie и регулярно обновляйте их для предотвращения злоупотреблений.
Проверяйте содержимое:
Используйте подписи или шифрование для защиты содержимого cookie от подделки.
Защита от CSRF:
Реализуйте меры защиты от CSRF-атак, например, используя токены.
      `,
    }
  ],
};