export const testEvents = {
  id: 100109,
  title: "Events",
  questions: [
    {
      id: 100110,
      question: "Что такое DOM событие и как его можно отловить в JavaScript?",
      answer: `
DOM-событие — это действие или изменение состояния, которое происходит в документе HTML и может быть перехвачено и обработано с помощью JavaScript. События могут быть вызваны различными действиями пользователя, такими как клики, нажатия клавиш, перемещения мыши и другие взаимодействия.

Как отловить DOM-событие в JavaScript?
Сначала нужно выбрать элемент, на который вы хотите повесить обработчик события. Это можно сделать с помощью методов, таких как document.querySelector() или getElementById().
Добавление обработчика события: Используйте метод addEventListener() для назначения обработчика события.
      `,
    },
    {
      id: 100111,
      question: "Как можно предотвратить стандартное поведение события в JavaScript? Приведите пример.",
      answer: `
Чтобы предотвратить стандартное поведение события в JavaScript, можно использовать метод preventDefault() объекта события. Этот метод останавливает выполнение стандартного действия, связанного с событием.

Рассмотрим ситуацию, когда у нас есть форма, и мы хотим предотвратить её отправку при нажатии кнопки:
<form id="myForm">
  <input type="text" placeholder="Введите текст" required>
  <button type="submit">Отправить</button>
</form>

<script>
  const form = document.getElementById('myForm');


  form.addEventListener('submit', function(event) {
    // Предотвращаем стандартное поведение отправки формы
    event.preventDefault();
    
    // Дальнейшие действия (например, валидация)
    console.log('Форма не отправлена!');
  });
</script>

Объяснение кода
Выбор формы: Мы выбираем элемент формы с помощью getElementById().
Добавление обработчика события: Используем addEventListener() для добавления обработчика события submit.
event.preventDefault(): Этот метод останавливает стандартное поведение браузера (отправку формы).
Дальнейшие действия: В данном случае мы просто выводим сообщение в консоль.
      `,
    },
    {
      id: 100112,
      question: "Объясните, что такое всплытие и перехват событий. Как вы можете использовать делегирование событий, чтобы оптимизировать обработку событий на веб-странице?",
      answer: `
Всплытие событий (Event Bubbling) — это механизм, при котором событие, происходящее на элементе, сначала обрабатывается этим элементом, а затем "всплывает" вверх по иерархии DOM, вызывая обработчики на родительских элементах.

Перехват событий (Event Capturing) — это обратный процесс. Событие сначала обрабатывается на самом верхнем уровне (родительском элементе), а затем "спускается" вниз к целевому элементу.

Делегирование событий — это техника, позволяющая устанавливать один обработчик события на родительский элемент, который будет обрабатывать события для всех его дочерних элементов.
Оптимизация производительности:
Вместо того чтобы добавлять обработчики к каждому элементу, вы можете добавить один обработчик к родителю. Это снижает количество обработчиков и уменьшает затраты на память.
Динамическое добавление элементов:
Если дочерние элементы добавляются или удаляются динамически, делегирование позволяет обработчику работать с новыми элементами без необходимости пересоздавать обработчики.
      `,
    }
  ],
};