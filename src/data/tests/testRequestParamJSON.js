export const testRequestParamJSON = {
  id: 100117,
  title: "Request parameters and JSON",
  questions: [
    {
      id: 100085,
      question: "Как клонировать объект в JavaScript с использованием JSON?",
      answer: `
      JSON.stringify() — преобразует объект в строку JSON.
      JSON.parse() — превращает строку обратно в новый объект.
      const original = { a: 1, b: { c: 2 } };
      const clone = JSON.parse(JSON.stringify(original));`,
    },
    {
      id: 100086,
      question: "Как добавить тело запроса в HTTP-запрос при использовании fetch API?",
      answer: `
      Чтобы добавить тело запроса (body) при использовании fetch, нужно:
Указать второй аргумент — объект с параметрами запроса.
В этом объекте задать метод (method), например, 'POST', 'PUT' и т.д.
Добавить свойство body — данные для отправки.
(Обычно) указать заголовок Content-Type через свойство headers.`,
    },
    {
      id: 100087,
      question: "Какие типы содержимого можно использовать при отправке HTTP-запроса, и как это влияет на запрос и ответ?",
      answer: `
      application/json
Сервер ожидает, что данные будут переданы в виде объекта JSON.
Клиент может легко парсить JSON, так как он поддерживается большинством языков программирования.


application/x-www-form-urlencoded
Данные кодируются как пары ключ-значение, разделённые амперсандом (&).
Традиционный способ отправки данных HTML-форм.


multipart/form-data
Данные разделяются на части (части могут быть текстовыми или бинарными).
Используется для загрузки файлов или отправки данных с файлами и текстовыми полями одновременно.


text/plain
Простой текст без форматирования.
Отправка простых текстовых сообщений.


text/html
HTML-код.
В основном используется в ответах сервера для веб-страниц.


application/xml
Данные в формате XML (eXtensible Markup Language).
Устаревший, но всё ещё используемый формат для API.


application/octet-stream
Двоичные данные (например, файлы).
Загрузка или скачивание файлов (например, PDF, ZIP).


image/* (например, image/jpeg, image/png)
Изображения в различных форматах.
Передача изображений между клиентом и сервером.
`,
    }
  ],
};
