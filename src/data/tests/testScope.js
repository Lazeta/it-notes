export const testScope = {
  id: 100775,
  title: "Scope",
  questions: [
    {
      id: 100776, 
      question: "Что такое Scope?",
      answer: `scope (область видимости) определяет, в каких частях кода доступны переменные и функции. 
      Это понятие относится к видимости и доступности ресурсов в различных частях программы. 
      Scope ограничивает область, где переменная может быть использована, предотвращая конфликты имен 
      и обеспечивая организацию кода.`,
    },
    {
      id: 100777, // [13%] Расскажи про области видимости
      question: "Какие есть области видимости?",
      answer: `Глобальная область видимости: Переменные, объявленные вне каких-либо функций, имеют 
      глобальную область видимости и доступны везде. 
      Функциональная область видимости: Переменные, объявленные внутри функции, имеют функциональную 
      область видимости и доступны только в этой функции. 
      Блочная область видимости (в JavaScript): Переменные, объявленные с помощью let и const внутри 
      блока кода (например, внутри if или цикла for), имеют блочную область видимости и доступны только 
      внутри этого блока. `,
    },
    {
      id: 100778,
      question: "Как Scope влияет на разработку?",
      answer: `Понимание scope помогает избежать неожиданного поведения кода, например, когда одна 
      переменная случайно перезаписывает другую в другой части программы. `,
    },
    {
      id: 100779,
      question: "Scope в контексте замыкания",
      answer: `Scope играет важную роль в концепции замыканий в JavaScript, где функция 
      имеет доступ к переменным из своей области видимости, даже после того, как родительская функция 
      завершила свое выполнение. `,
    },
    // {
    //   id: 100780,
    //   question: "",
    //   answer: ``,
    // },
  ],
};
