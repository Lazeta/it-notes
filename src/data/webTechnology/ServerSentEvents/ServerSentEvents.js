export const ServerSentEvents = {
  title: "Server-Sent Events (SSE)",
  children: [
    {
      title: "Определение",
      type: "text",
      description: `
            <p>Server-Sent Events (SSE) — это технология, позволяющая серверу отправлять обновления клиенту в режиме реального времени через однонаправленное HTTP-соединение.</p>
          `,
    },
    {
      title: "Основные характеристики",
      type: "text",
      description: `
            <p>Характеристики SSE:</p>
            <ul>
              <li><strong>Однонаправленная связь:</strong> Сервер отправляет данные только клиенту, то есть от сервера к клиенту.</li>
              <li><strong>HTTP-протокол:</strong> Использует стандартный HTTP, что облегчает интеграцию с существующими веб-приложениями.</li>
              <li><strong>Поддержка текстовых данных:</strong> Данные отправляются в текстовом формате, обычно в формате JSON или простом тексте.</li>
              <li><strong>Автоматическое восстановление соединения:</strong> Если соединение разрывается, клиент автоматически пытается переподключиться.</li>
            </ul>
          `,
    },
    {
      title: "Как работает SSE",
      type: "text",
      description: `
            <p>Процесс работы SSE:</p>
            <ul>
              <li>Клиент отправляет запрос к серверу с заголовком <code>Accept: text/event-stream</code>.</li>
              <li>Сервер устанавливает соединение и начинает отправлять данные в формате "event-stream".</li>
              <li>Данные отправляются в виде текстовых сообщений, каждое из которых может содержать различные поля (например, <code>data:</code>, <code>event:</code>, <code>id:</code>).</li>
              <li>Клиент обрабатывает полученные события и может обновлять интерфейс в реальном времени.</li>
            </ul>
          `,
    },
    {
      title: "Преимущества SSE",
      type: "text",
      description: `
            <p>Преимущества использования SSE:</p>
            <ul>
              <li><strong>Простота реализации:</strong> Легко интегрируется с существующими веб-приложениями, так как использует стандартные HTTP-запросы.</li>
              <li><strong>Поддержка браузеров:</strong> Большинство современных браузеров поддерживают SSE.</li>
              <li><strong>Эффективность:</strong> Уменьшает накладные расходы на сетевые соединения по сравнению с регулярным опросом сервера.</li>
            </ul>
          `,
    },
    {
      title: "Недостатки SSE",
      type: "text",
      description: `
            <p>Недостатки SSE:</p>
            <ul>
              <li><strong>Однонаправленная связь:</strong> Не поддерживает передачу данных от клиента к серверу, для этого необходимо использовать другие методы (например, AJAX).</li>
              <li><strong>Ограниченная поддержка:</strong> Некоторые старые браузеры могут не поддерживать SSE.</li>
              <li><strong>Задержки:</strong> В зависимости от реализации могут быть небольшие задержки в передаче данных.</li>
            </ul>
          `,
    },
    {
      title: "Применение SSE",
      type: "text",
      description: `
            <p>Ситуации, в которых используются SSE:</p>
            <ul>
              <li><strong>Чат-приложения:</strong> Для получения новых сообщений от сервера.</li>
              <li><strong>Обновления данных в реальном времени:</strong> Для отображения новостей, финансовых данных и т.п.</li>
              <li><strong>Мониторинг систем:</strong> Для получения данных о состоянии серверов и приложений.</li>
            </ul>
          `,
    },
  ],
};
